// src/pages/api/hello.ts
import { GetConvert } from '@/modules/tools/indicator/old';

import type { NextApiRequest, NextApiResponse } from 'next';
import axios from 'axios';
import { formatKlinesData } from '../utils/formatKlines';


const sourceData = {
  klines: [
    "2025-01-27 09:45,40.600,42.100,42.150,40.600,7071000,294813595.000,3.82",
    "2025-01-27 10:00,42.050,41.700,42.100,41.500,1838000,76763520.000,1.43",
    "2025-01-27 10:15,41.650,41.550,41.700,41.400,1657100,68919025.000,0.72",
    "2025-01-27 10:30,41.500,41.350,41.600,41.200,1641900,67892440.000,0.96",
    "2025-01-27 10:45,41.350,41.350,41.400,41.200,940100,38829135.000,0.48",
    "2025-01-27 11:00,41.350,41.350,41.350,41.150,947600,39116840.000,0.48",
    "2025-01-27 11:15,41.350,41.700,41.700,41.300,1570300,65062180.000,0.97",
    "2025-01-27 11:30,41.700,41.600,41.750,41.350,1202800,49960685.000,0.96",
    "2025-01-27 11:45,41.650,41.650,41.650,41.500,779300,32412940.000,0.36",
    "2025-01-27 12:00,41.650,41.550,41.700,41.400,1020700,42404595.000,0.72",
    "2025-01-27 13:15,41.500,41.800,42.000,41.500,2771000,115817490.000,1.20",
    "2025-01-27 13:30,41.800,41.800,41.850,41.650,820300,34255485.000,0.48",
    "2025-01-27 13:45,41.750,41.950,41.950,41.700,1808900,75532555.000,0.60",
    "2025-01-27 14:00,41.900,42.250,42.250,41.850,2174800,91353950.000,0.95",
    "2025-01-27 14:15,42.250,42.550,42.700,42.200,5378900,228665960.000,1.18",
    "2025-01-27 14:30,42.500,42.800,42.850,42.450,3181800,135641250.000,0.94",
    "2025-01-27 14:45,42.750,42.650,42.850,42.550,3128100,133629350.000,0.70",
    "2025-01-27 15:00,42.650,42.550,42.650,42.400,2216500,94175865.000,0.59",
    "2025-01-27 15:15,42.550,42.350,42.550,42.250,2141600,90840075.000,0.71",
    "2025-01-27 15:30,42.300,42.150,42.400,42.100,2749700,116199965.000,0.71",
    "2025-01-27 15:45,42.100,42.100,42.150,42.000,2576500,108388680.000,0.36",
    "2025-01-27 16:00,42.100,42.100,42.100,41.950,5727400,240871595.000,0.36",
    "2025-01-28 09:45,42.450,41.850,42.800,41.650,2232900,94148720.000,2.73",
    "2025-01-28 10:00,41.750,41.950,42.200,41.600,990000,41516990.000,1.43",
    "2025-01-28 10:15,41.900,42.100,42.150,41.700,666600,27966230.000,1.07",
    "2025-01-28 10:30,42.100,41.750,42.150,41.750,776400,32558755.000,0.95",
    "2025-01-28 10:45,41.800,42.250,42.250,41.750,1275500,53589220.000,1.20",
    "2025-01-28 11:00,42.250,42.250,42.500,42.200,590000,24971595.000,0.71",
    "2025-01-28 11:15,42.200,42.100,42.300,42.000,441300,18600430.000,0.71",
    "2025-01-28 11:30,42.100,42.150,42.250,42.050,390300,16456370.000,0.48",
    "2025-01-28 11:45,42.150,42.000,42.200,42.000,588100,24773420.000,0.47",
    "2025-01-28 12:00,42.100,42.100,42.300,42.000,2660300,112092070.000,0.71",
    "2025-02-03 09:45,41.500,39.800,41.500,39.700,7393700,298491710.000,4.28",
    "2025-02-03 10:00,39.800,39.850,40.100,39.500,3958300,157752915.000,1.51",
    "2025-02-03 10:15,39.900,39.900,39.900,39.350,2197900,87114950.000,1.38",
    "2025-02-03 10:30,39.900,40.000,40.000,39.800,253600,10124885.000,0.50"
    ]
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  // Â§ÑÁêÜ GET ËØ∑Ê±Ç
  if (req.method === 'GET') {
    try {
      const eastmoneyData =  await axios.get('https://push2his.eastmoney.com/api/qt/stock/kline/get?secid=0.300033&ut=fa5fd1943c7b386f172d6893dbfba10b&fields1=f1%2Cf2%2Cf3%2Cf4%2Cf5%2Cf6%2Cf7%2Cf8&fields2=f51%2Cf52%2Cf53%2Cf54%2Cf55%2Cf56%2Cf57%2Cf58%2Cf59%2Cf60%2Cf61%2Cf62%2Cf63%2Cf64&klt=15&fqt=1&end=20250930&lmt=210')
      // const eastmoneyData =  await axios.get('https://push2his.eastmoney.com/api/qt/stock/kline/get?secid=0.300033&ut=fa5fd1943c7b386f172d6893dbfba10b&fields1=f1,f2,f3,f4,f5,f6&fields2=f51,f52,f53,f54,f55,f56,f57,f58&klt=15&fqt=0&beg=20250101&end=20251231')
      
      // console.log("üöÄ ~ handler ~ eastmoneyData:", eastmoneyData?.data?.data)
      const sourceData = eastmoneyData?.data?.data
      
      // Format the klines data
      const formattedData = formatKlinesData(sourceData);
      console.log("üöÄ ~ handler ~ formattedData:", formattedData);
      
      // Extract the full_klines array which contains the processed data
      const klinesData = formattedData.full_klines;
      console.log("üöÄ ~ handler ~ klinesData:", klinesData);
      
      // Calculate MACD using the MACD function directly
      const macdData = GetConvert('MACD', klinesData);
      console.log("üöÄ ~ handler ~ macdData:", macdData);

      res.status(200).json({ 
        message: "MACD calculation successful",
        data: macdData,
        count: macdData.length
      });
    } catch (error) {
      console.error("Error in MACD calculation:", error);
      res.status(500).json({ 
        message: "Error calculating MACD", 
        error: error.message 
      });
    }
  } else {
    // Â§ÑÁêÜÂÖ∂‰ªñËØ∑Ê±ÇÊñπÊ≥ï
    res.setHeader('Allow', ['GET']);
    res.status(405).end(`Method ${req.method} Not Allowed`);
  }
}